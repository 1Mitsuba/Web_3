@page
@model IndexModel
@{
    ViewData["Title"] = "Tareas Asignadas";
}

<div class="content-container">
    <h2 class="tareas-title">Tareas Asignadas</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex align-items-center">
            <h5 class="mb-0 me-3">Lista de Tareas</h5>
            <a href="~/Concluida" class="badge bg-success text-decoration-none">
                <i class="bi bi-check-circle me-1"></i> Ver Tareas Finalizadas (@Model.TareasCompletadas)
            </a>
        </div>
        <div class="input-group" style="width: 300px;">
            <input type="text" class="form-control" placeholder="Buscar tarea...">
            <button class="btn btn-outline-secondary" type="button">
                <i class="bi bi-search"></i>
            </button>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3 mt-3">
        <div class="items-per-page d-flex align-items-center">
            <label for="pageSizeSelector" class="me-2">Mostrar:</label>
            <div class="select-dropdown">
                <select id="pageSizeSelector" class="form-select form-select-sm rounded-pill custom-select">
                    @if (Model.TamanoPagina == 5)
                    {
                        <option value="5" selected>5</option>
                    }
                    else
                    {
                        <option value="5">5</option>
                    }
                    
                    @if (Model.TamanoPagina == 10)
                    {
                        <option value="10" selected>10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }
                    
                    @if (Model.TamanoPagina == 15)
                    {
                        <option value="15" selected>15</option>
                    }
                    else
                    {
                        <option value="15">15</option>
                    }
                    
                    @if (Model.TamanoPagina == 25)
                    {
                        <option value="25" selected>25</option>
                    }
                    else
                    {
                        <option value="25">25</option>
                    }
                    
                    @if (Model.TamanoPagina == 50)
                    {
                        <option value="50" selected>50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }
                </select>
            </div>
            <span class="ms-2">tareas por página</span>
        </div>

        <div>
            <span class="text-muted">
                Mostrando @((Model.PaginaActual - 1) * Model.TamanoPagina + 1) - @Math.Min(Model.PaginaActual * Model.TamanoPagina, Model.TareasActivas) de @Model.TareasActivas tareas
            </span>
        </div>
    </div>

    @if (Model.Tareas.Count == 0)
    {
        <div class="alert alert-info" role="alert">
            <i class="bi bi-info-circle me-2"></i> No hay tareas pendientes o en curso. ¡Buen trabajo!
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover border">
                <thead>
                    <tr>
                        <th>Nombre Tarea</th>
                        <th>Fecha Vencimiento</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tarea in Model.Tareas)
                    {
                        <tr>
                            <td>@tarea.nombreTarea</td>
                            <td>@tarea.fechaVencimiento</td>
                            <td>
                                <span class="badge @(tarea.estado switch {
                                    "Pendiente" => "bg-warning text-dark",
                                    "En curso" => "bg-info",
                                    _ => "bg-secondary"
                                })">
                                    @tarea.estado
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <button class="btn-action btn-view" data-bs-toggle="tooltip" title="Ver detalles">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    
                                    <button class="btn-action btn-complete" data-bs-toggle="tooltip" title="Completar">
                                        <i class="bi bi-check-lg"></i>
                                    </button>
                                    <button class="btn-action btn-cancel" data-bs-toggle="tooltip" title="Cancelar">
                                        <i class="bi bi-x-lg"></i>
                                    </button>
                                    
                                    <button class="btn-action btn-edit" data-bs-toggle="tooltip" title="Editar">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Paginación -->
        <div class="d-flex justify-content-center mt-4">
            <nav>
                <ul class="pagination justify-content-center mb-0">
                    @if (Model.PaginaActual > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-page="./index" asp-route-pagina="@(Model.PaginaActual - 1)" asp-route-tamanoPagina="@Model.TamanoPagina">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>
                    }
                    
                    @{
                        // Mostrar todas las páginas si hay menos de 7
                        int startPage = 1;
                        int endPage = Model.TotalPaginas;
                        
                        // Si hay más de 7 páginas, calcular el rango a mostrar
                        if (Model.TotalPaginas > 7)
                        {
                            if (Model.PaginaActual <= 4)
                            {
                                // Estamos cerca del inicio, mostrar páginas 1-7
                                startPage = 1;
                                endPage = 7;
                            }
                            else if (Model.PaginaActual > Model.TotalPaginas - 4)
                            {
                                // Estamos cerca del final
                                startPage = Model.TotalPaginas - 6;
                                endPage = Model.TotalPaginas;
                            }
                            else
                            {
                                // Estamos en medio
                                startPage = Model.PaginaActual - 3;
                                endPage = Model.PaginaActual + 3;
                            }
                        }
                    }
                    
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                            <a class="page-link" asp-page="./index" asp-route-pagina="@i" asp-route-tamanoPagina="@Model.TamanoPagina">@i</a>
                        </li>
                    }
                    
                    @if (Model.PaginaActual < Model.TotalPaginas)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-page="./index" asp-route-pagina="@(Model.PaginaActual + 1)" asp-route-tamanoPagina="@Model.TamanoPagina">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Inicializar tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            if (typeof bootstrap !== 'undefined') {
                tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl);
                });
            }
            
            // Manejar el cambio en el selector de tamaño de página
            const pageSizeSelector = document.getElementById('pageSizeSelector');
            if (pageSizeSelector) {
                pageSizeSelector.addEventListener('change', function() {
                    window.location.href = '?pagina=1&tamanoPagina=' + this.value;
                });
                
                // Personalizar opciones del selector
                const options = pageSizeSelector.querySelectorAll('option');
                options.forEach(option => {
                    option.classList.add('purple-option');
                });
            }
        });
    </script>
}
